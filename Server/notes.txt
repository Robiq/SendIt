Todo:
	- Create functionality for negotiation in client
		Communicate over wss with server! NEEDS TLS!!!
	- Create server

Done:
	- settings setup complete

----------------------------------------------------

New functionality change:
	*CHANGE TO TWO STEPS!!!
		-1 Connect and 'register' as present (establish WSS) - Authenticate with keys if previously registered email!
		-2 Send request for connection (offer to email over WSS)
		(-3 Forwarded request via server to receiver. Accept connection/refuse)
	*Signalling and trickling ICE over WSS
	*No displaying offer/answer
		(showEnc/setDescr changes!)


New flow:
	Sender:
		1. Indicate own address and receivers address to server
		2. Server creates room. Indicates when both are online
		3. Create offer. Share offer.
		(4. Continous sharing of ICE-candidates!)
		5. Receive answer.
		(6. Continously receiving ICE-candidates)
		7. Create connection.
		8. Transfer files
		9. Transfer complete
		10. Teardown server
	
	Receiver:
		1. Server notifies of connection request (accept/deny)
		2. Receive offer.
		(4. Continously receiving ICE-candidates)
		5. Send answer.
		(6. Continous sharing of ICE-candidates!)
		8. Receive files
		9. Transfer complete
		10. Teardown server

	Pages:
		*Send
			*1. Own e-mail, receivers e-mail (input required), show files to be transferred (confirm)
			2. Waiting window (1. waiting server - 2. waiting receiver - 3. waiting channel)
			3. Transfer window
			4. Complete
		*Settings
			(same as now)
		*(Hidden - receive)
			1. Confirm / deny (Show sender & files to be received)
			2. Waiting window (1. waiting server - 2. waiting receiver - 3. waiting channel)
			3 Transfer window
			4- Complete


Plan:
* Create server with wss functionality
* Test 1 protocol at the time
* Once first protocol is up, expand!

---------------------------------------------------------------------

P1:

Connect ->
Authenticate <->
Initiate ->
<-	Accept/Refuse
		answer ->
		ice <->
		done ->

P2:
connect ->
Authenticate <->
 <- Initiate
 		Accept/Refuse ->
 	<-	answer
 		ice <->
 		done ->

----------------------------------
Create keys:
-------------

openssl genrsa -out server-key.pem 1024
openssl req -new -key server-key.pem -out server-csr.pem
openssl x509 -req -in server-csr.pem -signkey server-key.pem -out server-cert.pem


How to deal with message queues?